diff --git a/src/libcrun/container.c b/src/libcrun/container.c
index b9eba20..275e4a0 100644
--- a/src/libcrun/container.c
+++ b/src/libcrun/container.c
@@ -2378,6 +2378,18 @@ libcrun_container_run_internal (libcrun_container_t *container, libcrun_context_
 
   /* The container is waiting that we write back.  In this phase we can launch the
      prestart hooks.  */
+  /* Do this without being the subreaper for anything a hook spawns.
+   * XXX: is there a better way? (as if the container exits here, we won't catch it)
+  */
+  if (! detach || context->notify_socket)
+    {
+      ret = prctl (PR_SET_CHILD_SUBREAPER, 0, 0, 0, 0);
+      if (UNLIKELY (ret < 0))
+        {
+          ret = crun_make_error (err, errno, "set child subreaper");
+          goto fail;
+        }
+    }
   if (def->hooks && def->hooks->prestart_len)
     {
       ret = do_hooks (def, pid, context->id, false, NULL, "created", (hook **) def->hooks->prestart,
@@ -2392,6 +2404,15 @@ libcrun_container_run_internal (libcrun_container_t *container, libcrun_context_
       if (UNLIKELY (ret != 0))
         goto fail;
     }
+  if (! detach || context->notify_socket)
+    {
+      ret = prctl (PR_SET_CHILD_SUBREAPER, 1, 0, 0, 0);
+      if (UNLIKELY (ret < 0))
+        {
+          ret = crun_make_error (err, errno, "set child subreaper");
+          goto fail;
+        }
+    }
 
   if (seccomp_fd >= 0)
     {
